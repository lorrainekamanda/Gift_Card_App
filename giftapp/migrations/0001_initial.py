# Generated by Django 4.1.4 on 2022-12-12 09:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.CharField(max_length=14)),
                ('price_currency', models.CharField(choices=[('BZD', 'BZD'), ('CLF', 'CLF'), ('RUB', 'RUB'), ('XBB', 'XBB'), ('SGD', 'SGD'), ('MUR', 'MUR'), ('USS', 'USS'), ('FKP', 'FKP'), ('AMD', 'AMD'), ('XAG', 'XAG'), ('ALK', 'ALK'), ('USN', 'USN'), ('BIF', 'BIF'), ('CDF', 'CDF'), ('MDC', 'MDC'), ('AUD', 'AUD'), ('DOP', 'DOP'), ('HKD', 'HKD'), ('MNT', 'MNT'), ('KRO', 'KRO'), ('UGS', 'UGS'), ('WST', 'WST'), ('BTN', 'BTN'), ('LVR', 'LVR'), ('LBP', 'LBP'), ('MLF', 'MLF'), ('XOF', 'XOF'), ('YUR', 'YUR'), ('SSP', 'SSP'), ('BUK', 'BUK'), ('ZWD', 'ZWD'), ('AOA', 'AOA'), ('AZN', 'AZN'), ('UYI', 'UYI'), ('MTL', 'MTL'), ('BGM', 'BGM'), ('MOP', 'MOP'), ('BGN', 'BGN'), ('BRC', 'BRC'), ('MZE', 'MZE'), ('TRL', 'TRL'), ('GHC', 'GHC'), ('ITL', 'ITL'), ('ZRZ', 'ZRZ'), ('GRD', 'GRD'), ('CNX', 'CNX'), ('CSK', 'CSK'), ('USD', 'USD'), ('SEK', 'SEK'), ('NZD', 'NZD'), ('GEL', 'GEL'), ('ROL', 'ROL'), ('TOP', 'TOP'), ('SLE', 'SLE'), ('GMD', 'GMD'), ('NOK', 'NOK'), ('GWP', 'GWP'), ('XSU', 'XSU'), ('ZAR', 'ZAR'), ('MDL', 'MDL'), ('OMR', 'OMR'), ('SBD', 'SBD'), ('CUC', 'CUC'), ('ISK', 'ISK'), ('LRD', 'LRD'), ('NAD', 'NAD'), ('QAR', 'QAR'), ('BRB', 'BRB'), ('TMM', 'TMM'), ('DJF', 'DJF'), ('MRU', 'MRU'), ('UAK', 'UAK'), ('BOB', 'BOB'), ('HNL', 'HNL'), ('MXN', 'MXN'), ('BAN', 'BAN'), ('MAD', 'MAD'), ('XEU', 'XEU'), ('PAB', 'PAB'), ('GIP', 'GIP'), ('CHE', 'CHE'), ('LTT', 'LTT'), ('ZAL', 'ZAL'), ('PEI', 'PEI'), ('BBD', 'BBD'), ('KRH', 'KRH'), ('DKK', 'DKK'), ('XCD', 'XCD'), ('SLL', 'SLL'), ('TPE', 'TPE'), ('VES', 'VES'), ('DDM', 'DDM'), ('STD', 'STD'), ('UGX', 'UGX'), ('SOS', 'SOS'), ('XFO', 'XFO'), ('SUR', 'SUR'), ('NLG', 'NLG'), ('MVR', 'MVR'), ('CRC', 'CRC'), ('TRY', 'TRY'), ('ANG', 'ANG'), ('SDG', 'SDG'), ('JMD', 'JMD'), ('KRW', 'KRW'), ('BEF', 'BEF'), ('BWP', 'BWP'), ('VEB', 'VEB'), ('JPY', 'JPY'), ('YDD', 'YDD'), ('DZD', 'DZD'), ('ERN', 'ERN'), ('NIC', 'NIC'), ('LYD', 'LYD'), ('TTD', 'TTD'), ('LKR', 'LKR'), ('BAD', 'BAD'), ('GHS', 'GHS'), ('MKD', 'MKD'), ('CUP', 'CUP'), ('AED', 'AED'), ('ZWL', 'ZWL'), ('THB', 'THB'), ('MTP', 'MTP'), ('TJR', 'TJR'), ('PTE', 'PTE'), ('DEM', 'DEM'), ('CHF', 'CHF'), ('XTS', 'XTS'), ('RSD', 'RSD'), ('GEK', 'GEK'), ('ECS', 'ECS'), ('XUA', 'XUA'), ('CAD', 'CAD'), ('FIM', 'FIM'), ('XBD', 'XBD'), ('BYB', 'BYB'), ('EEK', 'EEK'), ('RWF', 'RWF'), ('BHD', 'BHD'), ('MKN', 'MKN'), ('YUM', 'YUM'), ('MVP', 'MVP'), ('RHD', 'RHD'), ('CNY', 'CNY'), ('YUD', 'YUD'), ('HRD', 'HRD'), ('VED', 'VED'), ('HRK', 'HRK'), ('COP', 'COP'), ('XDR', 'XDR'), ('CLP', 'CLP'), ('KYD', 'KYD'), ('XPD', 'XPD'), ('HTG', 'HTG'), ('IEP', 'IEP'), ('LUC', 'LUC'), ('KGS', 'KGS'), ('STN', 'STN'), ('UYP', 'UYP'), ('BOP', 'BOP'), ('FRF', 'FRF'), ('INR', 'INR'), ('MWK', 'MWK'), ('BOL', 'BOL'), ('KZT', 'KZT'), ('XPT', 'XPT'), ('ARM', 'ARM'), ('XFU', 'XFU'), ('GBP', 'GBP'), ('BMD', 'BMD'), ('TND', 'TND'), ('SIT', 'SIT'), ('LUL', 'LUL'), ('ETB', 'ETB'), ('GNF', 'GNF'), ('AZM', 'AZM'), ('ESB', 'ESB'), ('UYU', 'UYU'), ('PKR', 'PKR'), ('AOR', 'AOR'), ('BYR', 'BYR'), ('XBA', 'XBA'), ('PEN', 'PEN'), ('SDD', 'SDD'), ('VEF', 'VEF'), ('MZN', 'MZN'), ('IDR', 'IDR'), ('UYW', 'UYW'), ('ZMW', 'ZMW'), ('SRD', 'SRD'), ('SHP', 'SHP'), ('KES', 'KES'), ('SVC', 'SVC'), ('TJS', 'TJS'), ('KPW', 'KPW'), ('ILP', 'ILP'), ('MAF', 'MAF'), ('XXX', 'XXX'), ('TMT', 'TMT'), ('BND', 'BND'), ('BDT', 'BDT'), ('XPF', 'XPF'), ('BRE', 'BRE'), ('EUR', 'EUR'), ('JOD', 'JOD'), ('NIO', 'NIO'), ('MXP', 'MXP'), ('PLZ', 'PLZ'), ('BOV', 'BOV'), ('BEL', 'BEL'), ('BAM', 'BAM'), ('GWE', 'GWE'), ('ALL', 'ALL'), ('ARP', 'ARP'), ('ILS', 'ILS'), ('MXV', 'MXV'), ('IQD', 'IQD'), ('BRR', 'BRR'), ('PHP', 'PHP'), ('ISJ', 'ISJ'), ('LSL', 'LSL'), ('ARL', 'ARL'), ('ILR', 'ILR'), ('SDP', 'SDP'), ('VND', 'VND'), ('BGO', 'BGO'), ('ZRN', 'ZRN'), ('MRO', 'MRO'), ('RUR', 'RUR'), ('YUN', 'YUN'), ('ADP', 'ADP'), ('COU', 'COU'), ('ARA', 'ARA'), ('ESP', 'ESP'), ('TZS', 'TZS'), ('LUF', 'LUF'), ('PGK', 'PGK'), ('CSD', 'CSD'), ('ESA', 'ESA'), ('YER', 'YER'), ('ARS', 'ARS'), ('CHW', 'CHW'), ('AWG', 'AWG'), ('LAK', 'LAK'), ('MCF', 'MCF'), ('KWD', 'KWD'), ('CNH', 'CNH'), ('MMK', 'MMK'), ('FJD', 'FJD'), ('MGF', 'MGF'), ('BRZ', 'BRZ'), ('BRL', 'BRL'), ('EGP', 'EGP'), ('LVL', 'LVL'), ('XBC', 'XBC'), ('KHR', 'KHR'), ('XAU', 'XAU'), ('VNN', 'VNN'), ('PYG', 'PYG'), ('UZS', 'UZS'), ('NGN', 'NGN'), ('RON', 'RON'), ('CLE', 'CLE'), ('TWD', 'TWD'), ('GTQ', 'GTQ'), ('AFN', 'AFN'), ('IRR', 'IRR'), ('HUF', 'HUF'), ('ZWR', 'ZWR'), ('PLN', 'PLN'), ('GYD', 'GYD'), ('BGL', 'BGL'), ('ATS', 'ATS'), ('XRE', 'XRE'), ('BYN', 'BYN'), ('MYR', 'MYR'), ('ZMK', 'ZMK'), ('AON', 'AON'), ('LTL', 'LTL'), ('CYP', 'CYP'), ('SYP', 'SYP'), ('KMF', 'KMF'), ('SRG', 'SRG'), ('MZM', 'MZM'), ('MGA', 'MGA'), ('CZK', 'CZK'), ('GQE', 'GQE'), ('VUV', 'VUV'), ('UAH', 'UAH'), ('AFA', 'AFA'), ('BEC', 'BEC'), ('BSD', 'BSD'), ('SCR', 'SCR'), ('SZL', 'SZL'), ('GNS', 'GNS'), ('PES', 'PES'), ('NPR', 'NPR'), ('SAR', 'SAR'), ('AOK', 'AOK'), ('SKK', 'SKK'), ('XAF', 'XAF'), ('CVE', 'CVE'), ('BRN', 'BRN'), ('ECV', 'ECV')], default='USD', max_length=3)),
                ('rank', models.IntegerField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giftapp.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='giftapp.productcategory'),
        ),
    ]
